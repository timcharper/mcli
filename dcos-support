target-dcos() {
  export AUTH_TOKEN="$(dcos config show core.dcos_acs_token)"
  export MARATHON_CURL_CMD='curl -H Authorization:\ token='${AUTH_TOKEN}
  export MARATHON_MASTER_URL="$(dcos config show core.dcos_url)/marathon"
  export MESOS_CURL_CMD='curl -H Authorization:\ token='${AUTH_TOKEN}
  export MESOS_MASTER_URL="$(dcos config show core.dcos_url)/mesos"
  export MESOS_AGENT_URL_PREFIX="$(dcos config show core.dcos_url)/agent"
}

auto-trust-cert() {
  export MESOS_CURL_CMD="${MESOS_CURL_CMD:-curl} -k"
  export MARATHON_CURL_CMD="${MESOS_CURL_CMD:-curl} -k"
}

target-bundle() {
  local MESOS_MASTER_IP="$(ls -d -w1 *_master | head -n 1 | sed 's/_master//')"
  if [ -z "$MESOS_MASTER_IP" ]; then
    echo
    echo "To use this command, first, change the directory to the root of an unzipped bundle, and re-run."
    echo
    return 1
  fi
  local MARATHON_LEADER_FILE=$(find *_master/*v2_leader.json.gz | head -n 1)
  export BUNDLE_PORT_DELIMITER=$(basename $MARATHON_LEADER_FILE | sed 's/[0-9]//g' | head -c 1)
  local MARATHON_LEADER_IP=$(gzip -dc "$MARATHON_LEADER_FILE" | jq .leader -r | cut -f 1 -d ":")
  local MARATHON_LEADER_PORT=$(basename $MARATHON_LEADER_FILE | cut -f 1 -d "$BUNDLE_PORT_DELIMITER")
  local MARATHON_LEADER="$MARATHON_LEADER_IP:$MARATHON_LEADER_PORT"
  echo "Mesos Master IP is $MESOS_MASTER_IP"
  echo "Marathon leader is $MARATHON_LEADER"
  export MESOS_CURL_CMD=diagnostic-curl-mesos
  export MARATHON_CURL_CMD=diagnostic-curl-marathon
  export MESOS_MASTER_URL=http://${MESOS_MASTER_IP}:5050
  export MARATHON_MASTER_URL=http://${MARATHON_LEADER}
}

target-local-permissive-cluster() {
  export MESOS_MASTER_URL=http://leader.mesos:5050
  export MARATHON_MASTER_URL=http://marathon.mesos:8080

}